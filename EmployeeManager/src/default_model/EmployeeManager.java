package default_model;


import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.Date;
import java.util.StringTokenizer;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Quy Nguyen
 */
public class EmployeeManager extends javax.swing.JFrame {

    String fileName = "employee.txt"; 
    Vector<String> header = new Vector<String>(); 
    Vector<Vector> data = new Vector<Vector>(); 
    boolean addNew = true; 
    boolean changed = false; 
    
    DefaultTableModel model; 
    Vector<Vector> searchResult = new Vector<>();
    
    
    
    public EmployeeManager() {
        initComponents();
        header.add("Code"); header.add("Name"); header.add("Salary");
        loadData(); 
//        DefaultTableModel model; //Must be deleted to implement search button
        model = (DefaultTableModel) tblEmployee.getModel(); 
        model.setDataVector(data, header);
        
        Thread autoSave = new Thread(){
            @Override
            public void run(){
                try{
                    while(true){
                        Thread.sleep(5000);
                        btSaveFileActionPerformed(null);
                        txtTime.setText(new Date(System.currentTimeMillis()).toString());
                    }
                }catch(Exception e){
                }
            }
        };
        autoSave.start();
        
    }
    
    private void loadData(){ //Đọc dữ liệu từ tập tin
        //E111, Le Thi Ca Chua, 2222
        try{
            File f = new File(fileName); 
            if(!f.exists()) return; 
            FileReader fr = new FileReader(f);
            BufferedReader br = new BufferedReader(fr);
            String details; 
            while ((details = br.readLine()) != null){
                StringTokenizer stk = new StringTokenizer(details, ",");
                String code = stk.nextToken().trim(); 
                String name = stk.nextToken().trim();
                String salary = stk.nextToken().trim();
                // Create a new row
                Vector row = new Vector();
                row.add(code);
                row.add(name);
                row.add(salary);
                data.add(row);
            }
            br.close(); fr.close();
        }catch(Exception e){
            e.printStackTrace();
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();
        Code = new javax.swing.JLabel();
        Name = new javax.swing.JLabel();
        Salary = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtSalary = new javax.swing.JTextField();
        btNew = new javax.swing.JButton();
        btSaveFile = new javax.swing.JButton();
        btRemove = new javax.swing.JButton();
        btSave = new javax.swing.JButton();
        btExit = new javax.swing.JButton();
        txtTime = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmployee);

        Code.setText("Code");

        Name.setText("Name");

        Salary.setText("Salary");

        btNew.setText("New");
        btNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNewActionPerformed(evt);
            }
        });

        btSaveFile.setText("Save File");
        btSaveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveFileActionPerformed(evt);
            }
        });

        btRemove.setText("Remove");
        btRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoveActionPerformed(evt);
            }
        });

        btSave.setText("Save");
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });

        btExit.setText("Exit");
        btExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExitActionPerformed(evt);
            }
        });

        jLabel3.setText("Search");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addComponent(btSaveFile)
                        .addGap(86, 86, 86)
                        .addComponent(btRemove)
                        .addGap(94, 94, 94)
                        .addComponent(btSave)
                        .addGap(87, 87, 87)
                        .addComponent(btExit))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(txtTime))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(btnSearch))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Code)
                            .addComponent(Name)
                            .addComponent(Salary))
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCode)
                            .addComponent(txtName)
                            .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Code)
                            .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Name))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Salary)
                            .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btExit)
                            .addComponent(btSave)
                            .addComponent(btRemove)
                            .addComponent(btSaveFile)
                            .addComponent(btNew))
                        .addGap(28, 28, 28)
                        .addComponent(txtTime))
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //Handler of 5 buttons. 
    private void btNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNewActionPerformed
        // TODO add your handling code here:
        this.addNew = true; //Switch to addNew mode
        this.txtCode.setText("");
        this.txtCode.setEditable(true); 
        this.txtName.setText("");
        this.txtSalary.setText("");
        this.txtCode.requestFocus();
    }//GEN-LAST:event_btNewActionPerformed

    private void btSaveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveFileActionPerformed
        // TODO add your handling code here:
        try{
            PrintWriter pw = new PrintWriter(fileName); 
            for (Vector row: data){
                String data = String.format("%s,%s,%s", row.get(0), row.get(1), row.get(2)); 
                pw.println(data);
            }
            pw.close();
            changed = false; 
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_btSaveFileActionPerformed

    private void btRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoveActionPerformed
        // TODO add your handling code here:
        int r = (JOptionPane.showConfirmDialog(this, "Do you want to remove data from file?", "Remove?", JOptionPane.YES_NO_CANCEL_OPTION));
        if (r == JOptionPane.YES_OPTION){
            int selectedRow = tblEmployee.getSelectedRow();
            data.remove(selectedRow);
            tblEmployee.updateUI();
        }
    }//GEN-LAST:event_btRemoveActionPerformed

    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
        // TODO add your handling code here:
        String code = txtCode.getText().trim();
        String name = txtName.getText().trim();
        String salary = txtSalary.getText().trim();
        if(addNew) { // add a new row
            Vector row = new Vector();
            row.add(code);
            row.add(name);
            row.add(salary);
            data.add(row);
        }else { // update selected row
            int selectedRow = tblEmployee.getSelectedRow();
            Vector row = data.get(selectedRow); 
            row.set(1, name); 
            row.set(2, salary);
        }
        tblEmployee.updateUI();
        changed = true; 
    }//GEN-LAST:event_btSaveActionPerformed

    private void btExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExitActionPerformed
        // TODO add your handling code here:
        if (changed == true)
        {
            int r = JOptionPane.showConfirmDialog(this, "Do you want to save data to file?", "Save?", JOptionPane.YES_NO_CANCEL_OPTION);
            if(r == JOptionPane.YES_OPTION) {
                btSaveFileActionPerformed(evt);
                System.exit(0);
            } else if( r == JOptionPane.NO_OPTION ) {
                System.exit(0);
            }
        }else {
            int r = JOptionPane.showConfirmDialog(this, "Exit apllication?", "Exit?", JOptionPane.YES_NO_OPTION);
            if ( r == JOptionPane.YES_OPTION){
                System.exit(0);
            }
        }
    }//GEN-LAST:event_btExitActionPerformed
    
    private void tblEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmployeeMouseClicked
        int selectedRow = tblEmployee.getSelectedRow(); 
        String code = tblEmployee.getValueAt(selectedRow, 0).toString();
        String name = tblEmployee.getValueAt(selectedRow, 1).toString();
        String salary = tblEmployee.getValueAt(selectedRow, 2).toString();
        txtCode.setText(code);
        txtName.setText(name);
        txtSalary.setText(salary);
        addNew = false; // Switch editing mode
        txtCode.setEditable(false); // Prevent from editing code field
        
    }//GEN-LAST:event_tblEmployeeMouseClicked

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        
        searchResult.clear(); //to clear the result in table, beginning the next search
        if (txtSearch.getText().isEmpty())
        {
            model.setDataVector(data, header);
        }else{
            for(int i = 0; i < data.size(); i++){
            String name = (String)data.get(i).get(1);    
                if(name.indexOf(txtSearch.getText()) >= 0)
                    searchResult.add(data.get(i));
            }
                    model.setDataVector(searchResult, header);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Code;
    private javax.swing.JLabel Name;
    private javax.swing.JLabel Salary;
    private javax.swing.JButton btExit;
    private javax.swing.JButton btNew;
    private javax.swing.JButton btRemove;
    private javax.swing.JButton btSave;
    private javax.swing.JButton btSaveFile;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSalary;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JLabel txtTime;
    // End of variables declaration//GEN-END:variables
}
